{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface ICloudDocsPlugin {\n  echo(options: { value: string }): Promise<{ value: string }>;\n  readFile(options: { filePath: string }): Promise<{ fileStream: string }>;\n  readFileB64(options: { filePath: string }): Promise<{ fileStream: string }>;\n  removeFile(options: {\n    filePath: string;\n  }): Promise<{ result: string; url: string }>;\n  writeFile(options: {\n    filePath: string;\n    data: string;\n    overwrite?: boolean;\n  }): Promise<{ result: string; url: string }>;\n  mkdir(options: { path: string }): Promise<{ result: string; url: string }>;\n  stat(options: { path: string }): Promise<{\n    type: 'Directory' | 'File';\n    size: number;\n    modificationDate: string;\n    creationDate: string;\n  }>;\n  fileExist(options: { path: string }): Promise<{ result: boolean }>;\n  readdir(options: { path: string }): Promise<{ result: string[] }>;\n  initUbiquitousContainer(): Promise<void>;\n  syncToCloud(options: {\n    filePath: string;\n    destinationFolder: string;\n  }): Promise<{ url: string }>;\n}\n"]}