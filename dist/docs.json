{
  "api": {
    "name": "ICloudDocsPlugin",
    "slug": "iclouddocsplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "echo",
        "signature": "(options: { value: string; }) => Promise<{ value: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "Promise<{ value: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "echo"
      },
      {
        "name": "readFile",
        "signature": "(options: { filePath: string; }) => Promise<{ fileStream: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ filePath: string; }"
          }
        ],
        "returns": "Promise<{ fileStream: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "readfile"
      },
      {
        "name": "readFileB64",
        "signature": "(options: { filePath: string; }) => Promise<{ fileStream: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ filePath: string; }"
          }
        ],
        "returns": "Promise<{ fileStream: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "readfileb64"
      },
      {
        "name": "removeFile",
        "signature": "(options: { filePath: string; }) => Promise<{ result: string; url: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ filePath: string; }"
          }
        ],
        "returns": "Promise<{ result: string; url: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "removefile"
      },
      {
        "name": "writeFile",
        "signature": "(options: { filePath: string; data: string; overwrite?: boolean; }) => Promise<{ result: string; url: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ filePath: string; data: string; overwrite?: boolean | undefined; }"
          }
        ],
        "returns": "Promise<{ result: string; url: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "writefile"
      },
      {
        "name": "mkdir",
        "signature": "(options: { path: string; }) => Promise<{ result: string; url: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ path: string; }"
          }
        ],
        "returns": "Promise<{ result: string; url: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "mkdir"
      },
      {
        "name": "stat",
        "signature": "(options: { path: string; }) => Promise<{ type: 'Directory' | 'File'; size: number; modificationDate: string; creationDate: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ path: string; }"
          }
        ],
        "returns": "Promise<{ type: 'Directory' | 'File'; size: number; modificationDate: string; creationDate: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "stat"
      },
      {
        "name": "fileExist",
        "signature": "(options: { path: string; }) => Promise<{ result: boolean; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ path: string; }"
          }
        ],
        "returns": "Promise<{ result: boolean; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "fileexist"
      },
      {
        "name": "readdir",
        "signature": "(options: { path: string; }) => Promise<{ result: string[]; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ path: string; }"
          }
        ],
        "returns": "Promise<{ result: string[]; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "readdir"
      },
      {
        "name": "initUbiquitousContainer",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "initubiquitouscontainer"
      },
      {
        "name": "syncToCloud",
        "signature": "(options: { filePath: string; destinationFolder: string; }) => Promise<{ url: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ filePath: string; destinationFolder: string; }"
          }
        ],
        "returns": "Promise<{ url: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "synctocloud"
      }
    ],
    "properties": []
  },
  "interfaces": [],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}